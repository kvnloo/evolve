name: Auto Label

on:
  issues:
    types: [opened, edited]
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  label-issues:
    name: Label Issues
    runs-on: ubuntu-latest
    if: github.event_name == 'issues'

    permissions:
      issues: write
      contents: read

    steps:
      - name: Label Bug Reports
        if: contains(github.event.issue.title, '[BUG]')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['bug']
            })

      - name: Label Feature Requests
        if: contains(github.event.issue.title, '[FEATURE]')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['enhancement']
            })

      - name: Label Documentation Issues
        if: contains(github.event.issue.body, 'documentation') || contains(github.event.issue.title, 'docs')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['documentation']
            })

      - name: Label SPARC Related
        if: contains(github.event.issue.body, 'SPARC') || contains(github.event.issue.body, 'sparc')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['SPARC']
            })

      - name: Label Agent Related
        if: contains(github.event.issue.body, 'agent') || contains(github.event.issue.body, 'coordination')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['agents']
            })

  label-prs:
    name: Label Pull Requests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Label by Changed Files
        uses: actions/github-script@v7
        with:
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const labels = new Set();

            files.forEach(file => {
              // Documentation changes
              if (file.filename.match(/\.(md|txt)$/i) || file.filename.startsWith('docs/')) {
                labels.add('documentation');
              }

              // GitHub workflows
              if (file.filename.startsWith('.github/workflows/')) {
                labels.add('github-actions');
              }

              // Shell scripts
              if (file.filename.endsWith('.sh')) {
                labels.add('scripts');
              }

              // Configuration files
              if (file.filename.startsWith('.claude/')) {
                labels.add('configuration');
              }

              // Tests
              if (file.filename.includes('test')) {
                labels.add('tests');
              }
            });

            if (labels.size > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: Array.from(labels)
              });
            }

      - name: Label by Size
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const additions = pr.additions || 0;
            const deletions = pr.deletions || 0;
            const changes = additions + deletions;

            let sizeLabel = '';

            if (changes < 10) {
              sizeLabel = 'size/XS';
            } else if (changes < 50) {
              sizeLabel = 'size/S';
            } else if (changes < 250) {
              sizeLabel = 'size/M';
            } else if (changes < 1000) {
              sizeLabel = 'size/L';
            } else {
              sizeLabel = 'size/XL';
            }

            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: [sizeLabel]
            });
